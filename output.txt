const express = require('express');  //...............................................................................................
const bodyParser = require('body-parser');  //........................................................................................
const bcrypt = require('bcrypt-nodejs');  //..........................................................................................
const cors = require('cors');  //.....................................................................................................
const knex = require('knex');  //.....................................................................................................
const cookieParser = require('cookie-parser');  //....................................................................................
const fileUpload = require('express-fileupload');  //.................................................................................
const dotenv = require('dotenv');  //.................................................................................................
const validator = require("email-validator");  //.....................................................................................
const fs = require('fs');  //.........................................................................................................
dotenv.config();  //..................................................................................................................
//....................................................................................................................................
const register = require('./controllers/register');  //...............................................................................
const signin = require('./controllers/signin');  //...................................................................................
const website = require('./controllers/website');  //.................................................................................
const web = require('./controllers/web');  //.........................................................................................
const create = require('./controllers/create');  //...................................................................................
const upload = require('./controllers/upload');  //...................................................................................
const signout = require('./controllers/signout');  //.................................................................................
const settings = require('./controllers/settings');  //...............................................................................
const valid = require('./controllers/valid');  //.....................................................................................
const verify = require('./controllers/verify');  //...................................................................................
const sendverificationmail = require('./controllers/sendverificationmail');  //.......................................................
const resetpin = require('./controllers/resetpin');  //...............................................................................
const profdel = require('./controllers/profdel');  //.................................................................................
const sendresetpassmail = require('./controllers/sendresetpassmail');  //.............................................................
const deactivate = require("./controllers/deactivate");  //...........................................................................
const delimg = require('./controllers/del_img');  //..................................................................................
const getwebsite = require('./controllers/websiteSearch');  //........................................................................
//....................................................................................................................................
const getAllUsers = require('./admin/users');  //.....................................................................................
const getAllWebsites = require('./admin/websites');  //...............................................................................
const getAllImages = require('./admin/images');  //...................................................................................
const getAllLinks = require('./admin/links');  //.....................................................................................
const adminSignin = require('./admin/adminSignin');  //...............................................................................
const ban = require('./admin/ban');  //...............................................................................................
const userdel = require('./admin/userdel');  //.......................................................................................
const getAllBanned = require('./admin/banned');  //...................................................................................
const getAllDeactivated = require('./admin/deactivated');  //.........................................................................
const getAllUrls = require('./admin/urls');  //.......................................................................................
//....................................................................................................................................
var jwt = require('jsonwebtoken'); // used to create, sign, and verify tokens  //.....................................................
var config = require('./controllers/config'); // get config file  //..................................................................
//....................................................................................................................................
//....................................................................................................................................
//MAIL SERVICE  //....................................................................................................................
var nodemailer = require('nodemailer');  //...........................................................................................
//....................................................................................................................................
var transporter = nodemailer.createTransport({  //....................................................................................
  service: 'gmail',  //...............................................................................................................
  auth: JSON.parse(process.env.MAIL_DATA)  //.........................................................................................
});  //...............................................................................................................................
//....................................................................................................................................
//....................................................................................................................................
// DB Connection  //..................................................................................................................
const db = knex({  //.................................................................................................................
  client: 'pg',  //...................................................................................................................
  connection: JSON.parse(process.env.DB_DATA)  //.....................................................................................
})  //................................................................................................................................
//....................................................................................................................................
const PORT = process.env.PORT || 3002  //.............................................................................................
const app = express();  //............................................................................................................
//....................................................................................................................................
//get your dynamic subdomain  //......................................................................................................
app.use((req,res,next) => {  //.......................................................................................................
  if(!req.subdomains.length || req.subdomains.slice(-1)[0] === 'www') return next();  //..............................................
  console.log(req.subdomains.slice(-1)[0])  //........................................................................................
  const subdomain = req.subdomains.slice(-1)[0]  //...................................................................................
  return website.handleWebsiteGet(req, res, db, subdomain)  //........................................................................
  next();  //.........................................................................................................................
});  //...............................................................................................................................
//....................................................................................................................................
app.use(cors())  //...................................................................................................................
app.use(bodyParser.json());  //.......................................................................................................
app.use(bodyParser.urlencoded({ extended: false }));  //..............................................................................
app.use('/', express.static('public'))  //............................................................................................
app.use(fileUpload());  //............................................................................................................
app.use('/uploads/', express.static('./public/uploads/'));  //........................................................................
app.use(cookieParser());  //..........................................................................................................
//....................................................................................................................................
app.get('/', (req,res) => {  //.......................................................................................................
  if(!req.subdomain){  //.............................................................................................................
    res.redirect(process.env.APP_URL)  //.............................................................................................
  }  //...............................................................................................................................
  else  //............................................................................................................................
  {  //...............................................................................................................................
    website.handleWebsiteGet(req, res, db, subdomain);  //............................................................................
  }  //...............................................................................................................................
})  //................................................................................................................................
//....................................................................................................................................
app.get('/signin', (req, res)=> express.static('public'))  //.........................................................................
app.get('/register', (req, res)=> express.static('public'))  //.......................................................................
app.get('/first', (req, res)=> express.static('public'))  //..........................................................................
//....................................................................................................................................
app.post('/signin', (req, res) => { signin.handleSignin(req, res, db, bcrypt, jwt, config) })  //.....................................
app.post('/register', (req, res) => { register.handleRegister(req, res, db, bcrypt, jwt, config, fileUpload) })  //...................
app.post('/create', (req, res) => { create.handleCreateGet(req, res, db, cookieParser, fileUpload, jwt, config, bcrypt, fs)})  //.....
app.post('/upload', (req, res) => { upload.handleUploadGet(req, res, db, cookieParser, fileUpload, bcrypt,fs)})  //...................
app.post('/web', (req, res) => { web.handleWeb(req, res, db, jwt, config) })  //......................................................
app.post('/signout', (req,res) => { signout.handleSignout(req, res,bcrypt, jwt, config)})  //.........................................
app.post('/settings', (req,res) => {settings.handleSettings(req, res, db, bcrypt, jwt, config)} )  //.................................
app.post('/valid', (req,res) => {valid.handleValid(req,res,db,bcrypt,jwt,config,validator )})  //.....................................
app.get(`/verify/:username/:code`, (req,res) => { verify.handleVerify(req, res, db)})  //.............................................
app.post('/sendverificationmail', (req,res) => {sendverificationmail.handleSendVerificationMail(req,res,db,transporter,bcrypt)})  //..
app.post('/resetpin', (req,res) => {resetpin.handleResetPin(req,res,db)})  //.........................................................
app.post('/profdel', (req,res) => {profdel.handleProfDel(req,res,db,bcrypt)})  //.....................................................
app.post('/sendresetpassmail', (req,res) => {sendresetpassmail.handleSendResetPassMail(req,res,db,transporter,bcrypt)})  //...........
app.get('/dashboard', (req, res) => { dashboard.handleDashboardGet(req, res, db)})  //................................................
//....................................................................................................................................
app.get('/:url', (req, res) => {  //..................................................................................................
  if(process.env.API === undefined)  //...............................................................................................
    website.handleWebsiteGet(req, res, db)  //........................................................................................
  else  //............................................................................................................................
    res.redirect(`https://${req.params.url}.${process.env.API}`)  //..................................................................
})  //................................................................................................................................
app.post('/delimg', (req, res) => { delimg.handleDelImg(req, res, db, cookieParser, fileUpload, bcrypt,fs)})  //......................
app.post('/getwebsite', (req,res) => { getwebsite.handleGetWebsite(req,res,db) } )  //................................................
//....................................................................................................................................
app.post('/getAllUsers', (req,res) => { getAllUsers.handleUsers(req, res, db, bcrypt)})  //...........................................
app.post('/getAllWebsites', (req,res) => { getAllWebsites.handleWebsites(req, res, db, bcrypt)})  //..................................
app.post('/getAllImages', (req,res) => { getAllImages.handleImages(req, res, db, bcrypt)})  //........................................
app.post('/getAllLinks', (req,res) => { getAllLinks.handleLinks(req, res, db, bcrypt)})  //...........................................
app.post('/adminSignin', (req, res) => { adminSignin.handleAdminSignin(req, res, db, bcrypt, jwt, config) })  //......................
app.post('/ban', (req,res) => { ban.handleBan(req, res, db, bcrypt)})  //.............................................................
app.post('/deactivate', (req,res) => { deactivate.handleDeactivate(req, res, db,bcrypt)})  //.........................................
app.post('/userdel', (req,res) => {userdel.handleUserDel(req,res,db,bcrypt)})  //.....................................................
app.post('/getAllBanned', (req,res) => { getAllBanned.handleBannedUsers(req, res, db, bcrypt)})  //...................................
app.post('/getAllDeactivated', (req,res) => { getAllDeactivated.handleDeactivatedsUsers(req, res, db, bcrypt)})  //...................
app.post('/getAllUrls', (req,res) => { getAllUrls.handleAllUrls(req, res, db)})  //...................................................
//....................................................................................................................................
//....................................................................................................................................
//....................................................................................................................................
app.listen(PORT, ()=> {  //...........................................................................................................
  console.log('app is running on port', PORT);  //....................................................................................
})  //................................................................................................................................
